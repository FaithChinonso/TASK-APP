{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/customhooks/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHTTP from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const transformData = data => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const {\n    isLoading,\n    error,\n    fetchRequest: sendTaskRequest\n  } = useHTTP();\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://todo-app-a7762-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://todo-app-a7762-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"nNLTBDi+YmEdnHLPqzOzYDMBuws=\", false, function () {\n  return [useHTTP];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useHTTP","NewTask","props","transformData","data","generatedId","name","createdTask","id","text","taskText","onAddTask","isLoading","error","fetchRequest","sendTaskRequest","enterTaskHandler","url","method","headers","setIsLoading","setError","response","fetch","body","JSON","stringify","ok","Error","json","err","message"],"sources":["/Users/mac/Documents/customhooks/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHTTP from \"../../hooks/use-http\";\n\nconst NewTask = props => {\n  const transformData = data => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n  const { isLoading, error, fetchRequest: sendTaskRequest } = useHTTP();\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://todo-app-a7762-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://todo-app-a7762-default-rtdb.firebaseio.com/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;EAAA;;EACvB,MAAMC,aAAa,GAAGC,IAAI,IAAI;IAC5B,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB,CAD4B,CACG;;IAC/B,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAN;MAAmBI,IAAI,EAAEC;IAAzB,CAApB;IAEAR,KAAK,CAACS,SAAN,CAAgBJ,WAAhB;EACD,CALD;;EAMA,MAAM;IAAEK,SAAF;IAAaC,KAAb;IAAoBC,YAAY,EAAEC;EAAlC,IAAsDf,OAAO,EAAnE;;EACA,MAAMgB,gBAAgB,GAAG,MAAMN,QAAN,IAAkB;IACzCK,eAAe,CAAC;MACdE,GAAG,EAAE,+DADS;MAEdC,MAAM,EAAE,MAFM;MAGdC,OAAO,EAAE;QACP,gBAAgB;MADT;IAHK,CAAD,CAAf;IAOAC,YAAY,CAAC,IAAD,CAAZ;IACAC,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAD0B,EAE1B;QACEL,MAAM,EAAE,MADV;QAEEM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEjB,IAAI,EAAEC;QAAR,CAAf,CAFR;QAGES,OAAO,EAAE;UACP,gBAAgB;QADT;MAHX,CAF0B,CAA5B;;MAWA,IAAI,CAACG,QAAQ,CAACK,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACD;;MAED,MAAMxB,IAAI,GAAG,MAAMkB,QAAQ,CAACO,IAAT,EAAnB;IACD,CAjBD,CAiBE,OAAOC,GAAP,EAAY;MACZT,QAAQ,CAACS,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACD;;IACDX,YAAY,CAAC,KAAD,CAAZ;EACD,CA/BD;;EAiCA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAEJ,gBAAvB;MAAyC,OAAO,EAAEJ;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA/CD;;GAAMZ,O;UAOwDD,O;;;KAPxDC,O;AAiDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}