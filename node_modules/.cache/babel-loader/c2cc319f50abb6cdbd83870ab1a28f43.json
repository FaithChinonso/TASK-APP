{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nconst useHTTP = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {}\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    fetchRequest\n  };\n};\n\n_s(useHTTP, \"qokFrT6bmgLtWqHf7+C8AS80Vsg=\");\n\nexport default useHTTP;","map":{"version":3,"names":["useState","useCallback","useHTTP","isLoading","setIsLoading","error","setError","fetchRequest","requestConfig","applyData","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message"],"sources":["/Users/mac/Documents/customhooks/src/hooks/use-http.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useHTTP = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {},\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    fetchRequest,\n  };\n};\nexport default useHTTP;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMO,YAAY,GAAGN,WAAW,CAAC,OAAOO,aAAP,EAAsBC,SAAtB,KAAoC;IACnEL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAf,EAAoB;QAC9CC,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA8C,KADR;QAE9CC,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,GAA0D,IAFlB;QAG9CG,OAAO,EAAET,aAAa,CAACS,OAAd,GAAwBT,aAAa,CAACS,OAAtC,GAAgD;MAHX,CAApB,CAA5B;;MAMA,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MAEAZ,SAAS,CAACW,IAAD,CAAT;IACD,CAdD,CAcE,OAAOE,GAAP,EAAY;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACD;;IACDnB,YAAY,CAAC,KAAD,CAAZ;EACD,CArB+B,EAqB7B,EArB6B,CAAhC;EAsBA,OAAO;IACLD,SADK;IAELE,KAFK;IAGLE;EAHK,CAAP;AAKD,CA/BD;;GAAML,O;;AAgCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}